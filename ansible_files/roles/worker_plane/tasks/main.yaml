---
- name: change the hostname to worker
  shell: hostnamectl set-hostname worker

- name: update packages
  shell: sudo apt update

- name: create keys to make ssh 
  shell: >
    ssh-keygen -q -b 2048 -t rsa -N "" -f ~/.ssh/id_rsa

- name: br filter
  shell:
    cmd: |
      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
      overlay
      br_netfilter
      EOF
      sudo modprobe overlay
      sudo modprobe br_netfilter
      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
      EOF
      sudo sysctl --system

- name: Install container Runtimes
  shell:
    cmd: |
      OS=xUbuntu_22.04
      CRIO_VERSION=1.23
      echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
      echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$CRIO_VERSION/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION.list
      curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION/$OS/Release.key | sudo apt-key add -
      curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key add -

- name: run crio and dependencies
  shell:
    cmd: |
      sudo apt update
      sudo apt install cri-o cri-o-runc -y
      sudo systemctl enable crio.service
      sudo systemctl start crio.service
      sudo apt install cri-tools

- name: Install Kubeadm kubelet and kubectl
  shell:
    cmd: |
      sudo apt-get update
      sudo apt-get install -y apt-transport-https ca-certificates curl
      sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      sudo apt-get update
      sudo apt-get install -y kubelet kubeadm kubectl
      sudo apt-mark hold kubelet kubeadm kubectl

- name: upload the token file from local to server
  copy:
    src: ./tokenfile.sh
    dest: /tmp/tokenfile.sh

- name: Join the worker node to the cluster
  shell:
    cmd: |
      chmod +x /tmp/tokenfile.sh
      sh /tmp/tokenfile.sh

- name: upload the public key from master to worker
  copy: 
    src: ./id_rsa.pub
    dest: /tmp/

- name: copy the content of pub key to authorized keys and delete the tmp file
  shell: 
    cmd: |
      cat /tmp/id_rsa.pub >> ~/.ssh/authorized_keys
      rm -rf /tmp/id_rsa.pub
